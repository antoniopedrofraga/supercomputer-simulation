<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classStatistics" kind="class" language="C++" prot="public">
    <compoundname>Statistics</compoundname>
    <includes refid="statistics_8h" local="no">statistics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classStatistics_1a2a32cc5c4a7f7aa479658b61ea35fc4d" prot="private" static="no" mutable="no">
        <type><ref refid="classConfiguration" kindref="compound">Configuration</ref> *</type>
        <definition>Configuration* Statistics::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="22" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1ae1436be78ca512005768b0cb71030dcb" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned long long int &gt;</type>
        <definition>vector&lt;unsigned long long int&gt; Statistics::short_queue_wt</definition>
        <argsstring></argsstring>
        <name>short_queue_wt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private Config. Object containing the configuration of a simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="24" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1abf108a8006ea5d1c5831dc0bffeeb454" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned long long int &gt;</type>
        <definition>vector&lt;unsigned long long int&gt; Statistics::medium_queue_wt</definition>
        <argsstring></argsstring>
        <name>medium_queue_wt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;unsigned long long int&gt;. Contains all waiting times of short jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="25" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a3793d65ec1bbac95a36fe0390a080882" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned long long int &gt;</type>
        <definition>vector&lt;unsigned long long int&gt; Statistics::large_queue_wt</definition>
        <argsstring></argsstring>
        <name>large_queue_wt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;unsigned long long int&gt;. Contains all waiting times of medium jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="26" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1aedfa21080b46d090efd8f25b0bae9e95" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned long long int &gt;</type>
        <definition>vector&lt;unsigned long long int&gt; Statistics::huge_queue_wt</definition>
        <argsstring></argsstring>
        <name>huge_queue_wt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;unsigned long long int&gt;. Contains all waiting times of large jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="27" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1aff40ef465f5b732afa83e476a6d058dc" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Statistics::short_queue_ta</definition>
        <argsstring></argsstring>
        <name>short_queue_ta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;unsigned long long int&gt;. Contains all waiting times of huge jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="29" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a28ac7ff34cd9126bcd81d03143063d1d" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Statistics::medium_queue_ta</definition>
        <argsstring></argsstring>
        <name>medium_queue_ta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;double&gt;. Contains all turn around ratios of short jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="30" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a0f82ef376337ec5fc146f8f31613d85f" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Statistics::large_queue_ta</definition>
        <argsstring></argsstring>
        <name>large_queue_ta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;double&gt;. Contains all turn around ratios of medium jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="31" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a070a45774139e1a98ee51e0a3113d837" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; Statistics::huge_queue_ta</definition>
        <argsstring></argsstring>
        <name>huge_queue_ta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;double&gt;. Contains all turn around ratios of large jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="32" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a61aeb69db27ba7ee567a07788abcbf42" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="classWeek" kindref="compound">Week</ref> &gt;</type>
        <definition>vector&lt;Week&gt; Statistics::weeks</definition>
        <argsstring></argsstring>
        <name>weeks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;double&gt;. Contains all turn around ratios of huge jobs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="34" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1af673a8156269191416f8ec213eb8291c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Statistics::usage_price</definition>
        <argsstring></argsstring>
        <name>usage_price</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private vector&lt;Week&gt;. Contains information about number of jobs processed by every queues per week of simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="36" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1abb05b3b9f1c1eaccaa73a29055b7255e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Statistics::operational_cost</definition>
        <argsstring></argsstring>
        <name>operational_cost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private double. Total usage price of the simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="37" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classStatistics_1a591573a74c6fec3f909d12a401117499" prot="private" static="no" mutable="no">
        <type>unsigned long long int</type>
        <definition>unsigned long long int Statistics::machine_time</definition>
        <argsstring></argsstring>
        <name>machine_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private double. Total operational cost of the simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="38" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classStatistics_1abf8cd294ac6cda2aeee639defc276702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Statistics::Statistics</definition>
        <argsstring>(Configuration *config)</argsstring>
        <name>Statistics</name>
        <param>
          <type><ref refid="classConfiguration" kindref="compound">Configuration</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para><ref refid="classStatistics" kindref="compound">Statistics</ref> object default contructor. </para>        </briefdescription>
        <detaileddescription>
<para>Private unsigned long long int. Total machine time of the simulation.</para><para>Initializes a <ref refid="classStatistics" kindref="compound">Statistics</ref> object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Configuration*</parametername>
</parameternamelist>
<parameterdescription>
<para>config. Defines which configuration this statistics object should follow.</para></parameterdescription>
</parameteritem>
</parameterlist>
Contructor of <ref refid="classStatistics" kindref="compound">Statistics</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="45" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="6" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1af4c128bde8bed27787f5ecdb08bf9929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_usage_price</definition>
        <argsstring>()</argsstring>
        <name>get_usage_price</name>
        <briefdescription>
<para>Public method. Returns the total usage price as a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Usage price string.</para></simplesect>
Returns system total usage price as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="51" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1afb354cc8fcd9ab43ec9c3d9e2880e660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_machine_time</definition>
        <argsstring>()</argsstring>
        <name>get_machine_time</name>
        <briefdescription>
<para>Public method. Returns the total machine time as a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Machine time string.</para></simplesect>
Returns the machine time as a string with the number of days, hours, minutes and seconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="57" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="206" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a091d26462ea4db2b2a6032b94ff49a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_operational_cost</definition>
        <argsstring>()</argsstring>
        <name>get_operational_cost</name>
        <briefdescription>
<para>Public method. Returns the total operational cost as a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Operational cost string.</para></simplesect>
Returns system total operational cost as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="63" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a20e75d62f6802875eec1ebd8424d84b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_economic_balance</definition>
        <argsstring>()</argsstring>
        <name>get_economic_balance</name>
        <briefdescription>
<para>Public method. Returns the economic balance as a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Economic balance string.</para></simplesect>
Returns system economic balance as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="69" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a6f5e39adedce4de0c0983619fb8498c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_weekly_usage</definition>
        <argsstring>()</argsstring>
        <name>get_weekly_usage</name>
        <briefdescription>
<para>Public method. Returns the weekly usage as a string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. <ref refid="classSystem" kindref="compound">System</ref> weekly usage.</para></simplesect>
Returns system weekly usage as a string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="75" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a7858a6d068d7c56d29a5f54c20a8521c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_short_ta</definition>
        <argsstring>()</argsstring>
        <name>get_short_ta</name>
        <briefdescription>
<para>Public method. Returns the average turn around ratio of short jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Turn around ratio of short jobs string.</para></simplesect>
Returns average of turn around times of short jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="81" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a114925dbd18467fed3db887104d27807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_medium_ta</definition>
        <argsstring>()</argsstring>
        <name>get_medium_ta</name>
        <briefdescription>
<para>Public method. Returns the average turn around ratio of medium jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Turn around ratio of medium jobs string.</para></simplesect>
Returns average of turn around times of medium jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="87" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="104" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a6f0aacba4f01c18cc9da75b1cb2f3e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_large_ta</definition>
        <argsstring>()</argsstring>
        <name>get_large_ta</name>
        <briefdescription>
<para>Public method. Returns the average turn around ratio of large jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Turn around ratio of large jobs string.</para></simplesect>
Returns average of turn around times of large jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="93" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a6afcfec266fe44d1c876be80f09f6de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_huge_ta</definition>
        <argsstring>()</argsstring>
        <name>get_huge_ta</name>
        <briefdescription>
<para>Public method. Returns the average turn around ratio of huge jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Turn around ratio of huge jobs string.</para></simplesect>
Returns average of turn around times of huge jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="99" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1abef59b8f494093e62ff1a27bd989e42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_short_wt</definition>
        <argsstring>()</argsstring>
        <name>get_short_wt</name>
        <briefdescription>
<para>Public method. Returns the average waiting time of short jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Average waiting time of short jobs string.</para></simplesect>
Returns average of waiting times of short jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="105" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="140" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1aa20489eecdafe0ebcac554f34b60caef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_medium_wt</definition>
        <argsstring>()</argsstring>
        <name>get_medium_wt</name>
        <briefdescription>
<para>Public method. Returns the average waiting time of medium jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Average waiting time of medium jobs string.</para></simplesect>
Returns average of waiting times of medium jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="111" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="152" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a06c13d01f1a8ea83391628b9bf617a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_large_wt</definition>
        <argsstring>()</argsstring>
        <name>get_large_wt</name>
        <briefdescription>
<para>Public method. Returns the average waiting time of large jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Average waiting time of large jobs string.</para></simplesect>
Returns average of waiting times of large jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="117" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a17dc31579326d8463eba7dd661673f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Statistics::get_huge_wt</definition>
        <argsstring>()</argsstring>
        <name>get_huge_wt</name>
        <briefdescription>
<para>Public method. Returns the average waiting time of huge jobs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string. Average waiting time of huge jobs string.</para></simplesect>
Returns average of waiting times of huge jobs as a string with a precision of 2 decimal places. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="123" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1af99eab950e1fa1a657332fface5dc13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Statistics::add_usage_price</definition>
        <argsstring>(double price)</argsstring>
        <name>add_usage_price</name>
        <param>
          <type>double</type>
          <declname>price</declname>
        </param>
        <briefdescription>
<para>Public method. Adds price to total usage price. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>price. Price to be added.</para></parameterdescription>
</parameteritem>
</parameterlist>
Adds usage price to system total usage price. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="129" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a17bca1fa9938f98e93cebd56d428f9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Statistics::add_operational_cost</definition>
        <argsstring>(double cost)</argsstring>
        <name>add_operational_cost</name>
        <param>
          <type>double</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
<para>Public method. Adds cost to total operational cost. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>cost. Cost to be added.</para></parameterdescription>
</parameteritem>
</parameterlist>
Adds operational cost to system total operational cost. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="135" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a726b0734f8a0c86024543190ab3092ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Statistics::add_machine_time</definition>
        <argsstring>(unsigned long long int time)</argsstring>
        <name>add_machine_time</name>
        <param>
          <type>unsigned long long int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Public method. Adds time to total machine time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unsigned</parametername>
</parameternamelist>
<parameterdescription>
<para>long long int time. Time in seconds to be added.</para></parameterdescription>
</parameteritem>
</parameterlist>
Adds time to system total machine time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="141" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classStatistics_1a78e4c255a4999ebd6c8872eef6360427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Statistics::add_job</definition>
        <argsstring>(time_t start, Job job)</argsstring>
        <name>add_job</name>
        <param>
          <type>time_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classJob" kindref="compound">Job</ref></type>
          <declname>job</declname>
        </param>
        <briefdescription>
<para>Public method. Adds job to waiting time and turn around vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_t</parametername>
</parameternamelist>
<parameterdescription>
<para>start. Time of start. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classJob" kindref="compound">Job</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>job. <ref refid="classJob" kindref="compound">Job</ref> to be added.</para></parameterdescription>
</parameteritem>
</parameterlist>
Adds job to waiting time and turn around ratio vectors according to its type. Increments the number of Short, Medium, Large or Huge jobs processed in the week of job start time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="supercomputer/src/statistics/statistics.h" line="148" column="1" bodyfile="supercomputer/src/statistics/statistics.cpp" bodystart="38" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classStatistics" kindref="compound">Statistics</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>This object keeps statistics information structured and organized. </para>    </detaileddescription>
    <location file="supercomputer/src/statistics/statistics.h" line="20" column="1" bodyfile="supercomputer/src/statistics/statistics.h" bodystart="20" bodyend="149"/>
    <listofallmembers>
      <member refid="classStatistics_1a78e4c255a4999ebd6c8872eef6360427" prot="public" virt="non-virtual"><scope>Statistics</scope><name>add_job</name></member>
      <member refid="classStatistics_1a726b0734f8a0c86024543190ab3092ea" prot="public" virt="non-virtual"><scope>Statistics</scope><name>add_machine_time</name></member>
      <member refid="classStatistics_1a17bca1fa9938f98e93cebd56d428f9a4" prot="public" virt="non-virtual"><scope>Statistics</scope><name>add_operational_cost</name></member>
      <member refid="classStatistics_1af99eab950e1fa1a657332fface5dc13e" prot="public" virt="non-virtual"><scope>Statistics</scope><name>add_usage_price</name></member>
      <member refid="classStatistics_1a2a32cc5c4a7f7aa479658b61ea35fc4d" prot="private" virt="non-virtual"><scope>Statistics</scope><name>config</name></member>
      <member refid="classStatistics_1a20e75d62f6802875eec1ebd8424d84b1" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_economic_balance</name></member>
      <member refid="classStatistics_1a6afcfec266fe44d1c876be80f09f6de3" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_huge_ta</name></member>
      <member refid="classStatistics_1a17dc31579326d8463eba7dd661673f47" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_huge_wt</name></member>
      <member refid="classStatistics_1a6f0aacba4f01c18cc9da75b1cb2f3e51" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_large_ta</name></member>
      <member refid="classStatistics_1a06c13d01f1a8ea83391628b9bf617a4f" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_large_wt</name></member>
      <member refid="classStatistics_1afb354cc8fcd9ab43ec9c3d9e2880e660" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_machine_time</name></member>
      <member refid="classStatistics_1a114925dbd18467fed3db887104d27807" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_medium_ta</name></member>
      <member refid="classStatistics_1aa20489eecdafe0ebcac554f34b60caef" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_medium_wt</name></member>
      <member refid="classStatistics_1a091d26462ea4db2b2a6032b94ff49a31" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_operational_cost</name></member>
      <member refid="classStatistics_1a7858a6d068d7c56d29a5f54c20a8521c" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_short_ta</name></member>
      <member refid="classStatistics_1abef59b8f494093e62ff1a27bd989e42a" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_short_wt</name></member>
      <member refid="classStatistics_1af4c128bde8bed27787f5ecdb08bf9929" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_usage_price</name></member>
      <member refid="classStatistics_1a6f5e39adedce4de0c0983619fb8498c8" prot="public" virt="non-virtual"><scope>Statistics</scope><name>get_weekly_usage</name></member>
      <member refid="classStatistics_1a070a45774139e1a98ee51e0a3113d837" prot="private" virt="non-virtual"><scope>Statistics</scope><name>huge_queue_ta</name></member>
      <member refid="classStatistics_1aedfa21080b46d090efd8f25b0bae9e95" prot="private" virt="non-virtual"><scope>Statistics</scope><name>huge_queue_wt</name></member>
      <member refid="classStatistics_1a0f82ef376337ec5fc146f8f31613d85f" prot="private" virt="non-virtual"><scope>Statistics</scope><name>large_queue_ta</name></member>
      <member refid="classStatistics_1a3793d65ec1bbac95a36fe0390a080882" prot="private" virt="non-virtual"><scope>Statistics</scope><name>large_queue_wt</name></member>
      <member refid="classStatistics_1a591573a74c6fec3f909d12a401117499" prot="private" virt="non-virtual"><scope>Statistics</scope><name>machine_time</name></member>
      <member refid="classStatistics_1a28ac7ff34cd9126bcd81d03143063d1d" prot="private" virt="non-virtual"><scope>Statistics</scope><name>medium_queue_ta</name></member>
      <member refid="classStatistics_1abf108a8006ea5d1c5831dc0bffeeb454" prot="private" virt="non-virtual"><scope>Statistics</scope><name>medium_queue_wt</name></member>
      <member refid="classStatistics_1abb05b3b9f1c1eaccaa73a29055b7255e" prot="private" virt="non-virtual"><scope>Statistics</scope><name>operational_cost</name></member>
      <member refid="classStatistics_1aff40ef465f5b732afa83e476a6d058dc" prot="private" virt="non-virtual"><scope>Statistics</scope><name>short_queue_ta</name></member>
      <member refid="classStatistics_1ae1436be78ca512005768b0cb71030dcb" prot="private" virt="non-virtual"><scope>Statistics</scope><name>short_queue_wt</name></member>
      <member refid="classStatistics_1abf8cd294ac6cda2aeee639defc276702" prot="public" virt="non-virtual"><scope>Statistics</scope><name>Statistics</name></member>
      <member refid="classStatistics_1af673a8156269191416f8ec213eb8291c" prot="private" virt="non-virtual"><scope>Statistics</scope><name>usage_price</name></member>
      <member refid="classStatistics_1a61aeb69db27ba7ee567a07788abcbf42" prot="private" virt="non-virtual"><scope>Statistics</scope><name>weeks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
